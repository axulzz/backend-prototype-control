"""
Django settings for backend_prototype_control_v2 project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os

from pathlib import Path
from corsheaders.defaults import default_headers
from django.utils.translation import gettext_lazy as _

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-i9zit($_s!55yn7$h(ro&-o$eds&#s__gmc1%m-72@lop*^58g"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "drf_yasg",
    "drf_standardized_errors",
    "rest_framework",
    "django_filters",
    "django_extensions",
    # Auth
    "corsheaders",
    "oauth2_provider",
    "apps.users",
    # Apps
    "apps.registration",
    "apps.cores",
    "apps.school",
    "apps.prototypes",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "oauth2_provider.middleware.OAuth2TokenMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django.middleware.locale.LocaleMiddleware",
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

AUTH_USER_MODEL = "users.User"

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}

LOGIN_URL = "registration:login"
LOGIN_REDIRECT_URL = "registration:auth_index"

# LOGOUT_REDIRECT_URL = "registration:auth_index"
LOGOUT_REDIRECT_URL = '/auth/signout'

CORS_ORIGIN_ALLOW_ALL = True

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGES = [
    ("en-us", _("English")),
    ("es-mx", _("Spanish")),
]

LANGUAGE_CODE = "es-mx"

TIME_ZONE = "America/Monterrey"

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

MEDIA_ROOT = os.path.join(BASE_DIR, "media")
MEDIA_URL = "/media/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

SIDE_ID = 1


def get_oidc_rsa_private_key():
    oidc_key = Path(os.environ.get("OIDC_RSA_PRIVATE_KEY", "./oidc.key"))

    if oidc_key.is_file():
        with open(oidc_key, "rb") as f:
            content = f.read()
            return content.rstrip().decode("utf-8"), True

    return "", False


OIDC_RSA_PRIVATE_KEY, OIDC_ENABLED = get_oidc_rsa_private_key()

OAUTH2_PROVIDER = {
    "OIDC_ENABLED": True,
    "OIDC_RSA_PRIVATE_KEY": OIDC_RSA_PRIVATE_KEY,
    "OIDC_RP_INITIATED_LOGOUT_ENABLED": True,
    "OIDC_RP_INITIATED_LOGOUT_ALWAYS_PROMPT": True,
    "SCOPES": {
        "openid": "OpenID Connect scope",
        "profile": "Profile scope",
        "email": "Email scope",
        "permissions": "Permissions scope",
        "read": "Read scope",
        "write": "Write scope",
    },
    "OAUTH2_VALIDATOR_CLASS": "config.oauth.validators.CustomOAuth2Validator",
    "ALLOWED_REDIRECT_URI_SCHEMES": ["http", "https"],
}

REST_FRAMEWORK = {
    "DEFAULT_RENDERER_CLASSES": (
        "rest_framework.renderers.JSONRenderer",
        "rest_framework.renderers.BrowsableAPIRenderer",  # Para que la interfaz web est√© disponible
    ),
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "oauth2_provider.contrib.rest_framework.OAuth2Authentication",
    ),
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly",
        # "rest_framework.permissions.IsAuthenticated",
        "rest_framework.permissions.AllowAny",
    ],
    "DEFAULT_FILTER_BACKENDS": [
        "rest_framework.filters.SearchFilter",
        "rest_framework.filters.OrderingFilter",
        "django_filters.rest_framework.DjangoFilterBackend",
    ],
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.LimitOffsetPagination",
    "PAGE_SIZE": 20,
}

ROLES = [
    {
        "name": "Vinculacion",
        "permissions": [
            ("prototype_control", "view_prototype"),
            ("prototype_control", "add_prototype"),
            ("prototype_control", "change_prototype"),
            ("prototype_control", "view_teacher"),
            ("prototype_control", "add_teacher"),
            ("prototype_control", "change_teacher"),
            ("prototype_control", "view_student"),
            ("prototype_control", "add_student"),
            ("prototype_control", "change_student"),
            ("prototype_control", "view_acdemic_level"),
            ("prototype_control", "add_acdemic_level"),
            ("prototype_control", "change_acdemic_level"),
            ("prototype_control", "view_typeinvestigation"),
            ("prototype_control", "add_typeinvestigation"),
            ("prototype_control", "change_typeinvestigation"),
        ],
    },
    {
        "name": "Alumno",
        "permissions": [
            ("prototype_control", "add_prototype"),
            ("prototype_control", "view_prototype"),
            ("prototype_control", "change_student"),
        ],
    },
    {
        "name": "Docente",
        "permissions": [
            ("prototype_control", "view_prototype"),
            ("prototype_control", "view_teacher"),
            ("prototype_control", "change_teacher"),
        ],
    },
]

# Cors
# https://github.com/adamchainz/django-cors-headers

CORS_ALLOW_HEADERS = list(default_headers) + ["Accept-Language", "x-workspace-id"]
